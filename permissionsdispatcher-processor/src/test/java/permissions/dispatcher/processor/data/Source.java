package permissions.dispatcher.processor.data;

public final class Source {

    public static final String[] EMPTY = {};

    public static class OnePermission {
        public static final String[] ACTUAL = {
                "package permissions.dispatcher.sample;",
                "import android.Manifest;",
                "import android.app.Activity;",
                "import android.os.Bundle;",
                "import android.view.Menu;",
                "import android.view.MenuItem;",
                "import permissions.dispatcher.NeedsPermission;",
                "import permissions.dispatcher.RuntimePermissions;",
                "import permissions.dispatcher.ShowsRationale;",
                "@RuntimePermissions",
                "public class MainActivity extends Activity {",
                "@NeedsPermission(Manifest.permission.CAMERA)",
                "void showCamera() {",
                "}",
                "@ShowsRationale(Manifest.permission.CAMERA)",
                "void showRationaleForCamera() {",
                "}",
                "public boolean shouldShowRequestPermissionRationale(String permission) { return true; }",
                "public final void requestPermissions(String[] permissions, int requestCode) {}",
                "}"};

        public static final String[] EXPECT = {
                "package permissions.dispatcher.sample;",
                "\n",
                "import java.lang.String;",
                "import permissions.dispatcher.PermissionUtils;",
                "\n",
                "public final class MainActivityPermissionsDispatcher {",
                "  private static final int REQUEST_SHOWCAMERA = 0;",
                "\n",
                "  private MainActivityPermissionsDispatcher() {",
                "  }",
                "\n",
                "  public static void showCameraWithCheck(MainActivity target) {",
                "    if (PermissionUtils.hasSelfPermissions(target, \"android.permission.CAMERA\")) {",
                "      target.showCamera();",
                "    } else {",
                "      if (target.shouldShowRequestPermissionRationale(\"android.permission.CAMERA\")) {",
                "        target.showRationaleForCamera();",
                "      }",
                "      target.requestPermissions(new String[]{\"android.permission.CAMERA\"}, REQUEST_SHOWCAMERA);",
                "    }",
                "  }",
                "\n",
                "  public static void onRequestPermissionsResult(MainActivity target, int requestCode, String[] permissions, int[] grantResults) {",
                "    switch (requestCode) {",
                "      case REQUEST_SHOWCAMERA:",
                "      if (PermissionUtils.verifyPermissions(grantResults)) {",
                "        target.showCamera();",
                "      }",
                "      break;",
                "      default:",
                "      break;",
                "    }",
                "  }",
                "}"
        };
    }

    public static class NoShowRationale {
        public static final String[] ACTUAL = {
                "package permissions.dispatcher.sample;",
                "import android.Manifest;",
                "import android.app.Activity;",
                "import android.os.Bundle;",
                "import android.view.Menu;",
                "import android.view.MenuItem;",
                "import permissions.dispatcher.NeedsPermission;",
                "import permissions.dispatcher.RuntimePermissions;",
                "import permissions.dispatcher.ShowsRationale;",
                "@RuntimePermissions",
                "public class MainActivity extends Activity {",
                "@NeedsPermission(Manifest.permission.CAMERA)",
                "void showCamera() {",
                "}",
                "public boolean shouldShowRequestPermissionRationale(String permission) { return true; }",
                "public final void requestPermissions(String[] permissions, int requestCode) {}",
                "}"};

        public static final String[] EXPECT = {
                "package permissions.dispatcher.sample;",
                "\n",
                "import java.lang.String;",
                "import permissions.dispatcher.PermissionUtils;",
                "\n",
                "public final class MainActivityPermissionsDispatcher {",
                "  private static final int REQUEST_SHOWCAMERA = 0;",
                "\n",
                "  private MainActivityPermissionsDispatcher() {",
                "  }",
                "\n",
                "  public static void showCameraWithCheck(MainActivity target) {",
                "    if (PermissionUtils.hasSelfPermissions(target, \"android.permission.CAMERA\")) {",
                "      target.showCamera();",
                "    } else {",
                "      target.requestPermissions(new String[]{\"android.permission.CAMERA\"}, REQUEST_SHOWCAMERA);",
                "    }",
                "  }",
                "\n",
                "  public static void onRequestPermissionsResult(MainActivity target, int requestCode, String[] permissions, int[] grantResults) {",
                "    switch (requestCode) {",
                "      case REQUEST_SHOWCAMERA:",
                "      if (PermissionUtils.verifyPermissions(grantResults)) {",
                "        target.showCamera();",
                "      }",
                "      break;",
                "      default:",
                "      break;",
                "    }",
                "  }",
                "}"
        };
    }

    public static class TwoPermissions {
        public static final String[] ACTUAL = {
                "package permissions.dispatcher.sample;",
                "import android.Manifest;",
                "import android.app.Activity;",
                "import android.os.Bundle;",
                "import android.view.Menu;",
                "import android.view.MenuItem;",
                "import permissions.dispatcher.NeedsPermission;",
                "import permissions.dispatcher.RuntimePermissions;",
                "import permissions.dispatcher.ShowsRationale;",
                "@RuntimePermissions",
                "public class MainActivity extends Activity {",
                "@NeedsPermission(Manifest.permission.CAMERA)",
                "void showCamera() {",
                "}",
                "@NeedsPermission(Manifest.permission.READ_CONTACTS)",
                "void showContact() {",
                "}",
                "@ShowsRationale(Manifest.permission.CAMERA)",
                "void showRationaleForCamera() {",
                "}",
                "@ShowsRationale(Manifest.permission.READ_CONTACTS)",
                "void showRationaleForContact() {",
                "}",
                "public boolean shouldShowRequestPermissionRationale(String permission) { return true; }",
                "public final void requestPermissions(String[] permissions, int requestCode) {}",
                "}"};

        public static final String[] EXPECT = {
                "package permissions.dispatcher.sample;",
                "\n",
                "import java.lang.String;",
                "import permissions.dispatcher.PermissionUtils;",
                "\n",
                "public final class MainActivityPermissionsDispatcher {",
                "  private static final int REQUEST_SHOWCAMERA = 0;",
                "\n",
                "  private static final int REQUEST_SHOWCONTACT = 1;",
                "\n",
                "  private MainActivityPermissionsDispatcher() {",
                "  }",
                "\n",
                "  public static void showCameraWithCheck(MainActivity target) {",
                "    if (PermissionUtils.hasSelfPermissions(target, \"android.permission.CAMERA\")) {",
                "      target.showCamera();",
                "    } else {",
                "      if (target.shouldShowRequestPermissionRationale(\"android.permission.CAMERA\")) {",
                "        target.showRationaleForCamera();",
                "      }",
                "      target.requestPermissions(new String[]{\"android.permission.CAMERA\"}, REQUEST_SHOWCAMERA);",
                "    }",
                "  }",
                "\n",
                "  public static void showContactWithCheck(MainActivity target) {",
                "    if (PermissionUtils.hasSelfPermissions(target, \"android.permission.READ_CONTACTS\")) {",
                "      target.showContact();",
                "    } else {",
                "      if (target.shouldShowRequestPermissionRationale(\"android.permission.READ_CONTACTS\")) {",
                "        target.showRationaleForContact();",
                "      }",
                "      target.requestPermissions(new String[]{\"android.permission.READ_CONTACTS\"}, REQUEST_SHOWCONTACT);",
                "    }",
                "  }",
                "\n",
                "  public static void onRequestPermissionsResult(MainActivity target, int requestCode, String[] permissions, int[] grantResults) {",
                "    switch (requestCode) {",
                "      case REQUEST_SHOWCAMERA:",
                "      if (PermissionUtils.verifyPermissions(grantResults)) {",
                "        target.showCamera();",
                "      }",
                "      break;",
                "      case REQUEST_SHOWCONTACT:",
                "      if (PermissionUtils.verifyPermissions(grantResults)) {",
                "        target.showContact();",
                "      }",
                "      break;",
                "      default:",
                "      break;",
                "    }",
                "  }",
                "}"
        };
    }

    public static class ZeroPermission {
        public static final String[] ACTUAL = {
                "package permissions.dispatcher.sample;",
                "import android.Manifest;",
                "import android.app.Activity;",
                "import android.os.Bundle;",
                "import android.view.Menu;",
                "import android.view.MenuItem;",
                "import permissions.dispatcher.NeedsPermission;",
                "import permissions.dispatcher.RuntimePermissions;",
                "import permissions.dispatcher.ShowsRationale;",
                "@RuntimePermissions",
                "public class MainActivity extends Activity {",
                "public boolean shouldShowRequestPermissionRationale(String permission) { return true; }",
                "public final void requestPermissions(String[] permissions, int requestCode) {}",
                "}"};
    }

    public static class WrongFileName {
        public static final String[] ACTUAL = {
                "package permissions.dispatcher.sample;",
                "import android.Manifest;",
                "import android.os.Bundle;",
                "import android.view.Menu;",
                "import android.view.MenuItem;",
                "import permissions.dispatcher.NeedsPermission;",
                "import permissions.dispatcher.RuntimePermissions;",
                "import permissions.dispatcher.ShowsRationale;",
                "@RuntimePermissions",
                "public class MainUtils {",
                "@NeedsPermission(Manifest.permission.CAMERA)",
                "void showCamera() {",
                "}",
                "@ShowsRationale(Manifest.permission.CAMERA)",
                "void showRationaleForCamera() {",
                "}",
                "public boolean shouldShowRequestPermissionRationale(String permission) { return true; }",
                "public final void requestPermissions(String[] permissions, int requestCode) {}",
                "}"};
    }

    public static class DuplicatedPermission {
        public static final String[] ACTUAL = {
                "package permissions.dispatcher.sample;",
                "import android.Manifest;",
                "import android.app.Activity;",
                "import android.os.Bundle;",
                "import android.view.Menu;",
                "import android.view.MenuItem;",
                "import permissions.dispatcher.NeedsPermission;",
                "import permissions.dispatcher.RuntimePermissions;",
                "import permissions.dispatcher.ShowsRationale;",
                "@RuntimePermissions",
                "public class MainActivity extends Activity {",
                "@NeedsPermission(Manifest.permission.CAMERA)",
                "void showCamera() {",
                "}",
                "@NeedsPermission(Manifest.permission.CAMERA)",
                "void showContact() {",
                "}",
                "@ShowsRationale(Manifest.permission.READ_CONTACTS)",
                "void showRationaleForContact() {",
                "}",
                "public boolean shouldShowRequestPermissionRationale(String permission) { return true; }",
                "public final void requestPermissions(String[] permissions, int requestCode) {}",
                "}"};
    }

    public static class DuplicatedRationale {
        public static final String[] ACTUAL = {
                "package permissions.dispatcher.sample;",
                "import android.Manifest;",
                "import android.app.Activity;",
                "import android.os.Bundle;",
                "import android.view.Menu;",
                "import android.view.MenuItem;",
                "import permissions.dispatcher.NeedsPermission;",
                "import permissions.dispatcher.RuntimePermissions;",
                "import permissions.dispatcher.ShowsRationale;",
                "@RuntimePermissions",
                "public class MainActivity extends Activity {",
                "@NeedsPermission(Manifest.permission.CAMERA)",
                "void showCamera() {",
                "}",
                "@ShowsRationale(Manifest.permission.READ_CONTACTS)",
                "void showContact() {",
                "}",
                "@ShowsRationale(Manifest.permission.READ_CONTACTS)",
                "void showRationaleForContact() {",
                "}",
                "public boolean shouldShowRequestPermissionRationale(String permission) { return true; }",
                "public final void requestPermissions(String[] permissions, int requestCode) {}",
                "}"};
    }

    public static class NeedsPermissionIsPrivate {
        public static final String[] ACTUAL = {
                "package permissions.dispatcher.sample;",
                "import android.Manifest;",
                "import android.app.Activity;",
                "import android.os.Bundle;",
                "import android.view.Menu;",
                "import android.view.MenuItem;",
                "import permissions.dispatcher.NeedsPermission;",
                "import permissions.dispatcher.RuntimePermissions;",
                "import permissions.dispatcher.ShowsRationale;",
                "@RuntimePermissions",
                "public class MainActivity extends Activity {",
                "@NeedsPermission(Manifest.permission.CAMERA)",
                "private void showCamera() {",
                "}",
                "@ShowsRationale(Manifest.permission.CAMERA)",
                "void showRationaleForCamera() {",
                "}",
                "public boolean shouldShowRequestPermissionRationale(String permission) { return true; }",
                "public final void requestPermissions(String[] permissions, int requestCode) {}",
                "}"};
    }

    public static class ShowsRationaleIsPrivate {
        public static final String[] ACTUAL = {
                "package permissions.dispatcher.sample;",
                "import android.Manifest;",
                "import android.app.Activity;",
                "import android.os.Bundle;",
                "import android.view.Menu;",
                "import android.view.MenuItem;",
                "import permissions.dispatcher.NeedsPermission;",
                "import permissions.dispatcher.RuntimePermissions;",
                "import permissions.dispatcher.ShowsRationale;",
                "@RuntimePermissions",
                "public class MainActivity extends Activity {",
                "@NeedsPermission(Manifest.permission.CAMERA)",
                "private void showCamera() {",
                "}",
                "@ShowsRationale(Manifest.permission.CAMERA)",
                "void showRationaleForCamera() {",
                "}",
                "public boolean shouldShowRequestPermissionRationale(String permission) { return true; }",
                "public final void requestPermissions(String[] permissions, int requestCode) {}",
                "}"};
    }

}
